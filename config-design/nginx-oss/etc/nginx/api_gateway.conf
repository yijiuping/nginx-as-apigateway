# API Upstreams
include api_backends.conf;

# API Keys for Authentication
include api_keys.conf;

# Zone for Rate limiting
limit_req_zone $binary_remote_addr zone=client_ip_10rs:1m rate=10r/s;
limit_req_zone $http_apikey        zone=apikey_200rs:1m   rate=200r/s;

client_body_temp_path /var/cache/nginx/client_temp;
proxy_temp_path /var/cache/nginx/proxy_temp;
proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m use_temp_path=off;

server {
    access_log /var/log/nginx/api_access.log main; # Each API may also log to a separate file

    listen 443 ssl;
    listen 80 default_server;

    server_name exmple.com;

    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    # Access Control with client address
    #     deny  192.168.1.1;
    #     allow 192.168.1.0/24;
    #     allow 10.1.1.0/16;
    #     allow 2001:0db8::/32;
    #     deny  all;

    # Client buffering
    proxy_request_buffering on;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 32k;
    client_body_buffer_size 84k;
    client_max_body_size 100m;

    # Server buffering
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 8 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 32k;
    proxy_max_temp_file_size 1024m;

    # TLS config
    ssl_certificate      /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key  /etc/nginx/ssl/exmaple.com.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.2 TLSv1.3;

    # API definitions, one per file
    include api_conf.d/*.conf;

    # Error responses
    error_page 404 = @404;         # Invalid paths are treated as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to the client
    include api_json_errors.conf;  # API client friendly JSON error responses
    default_type application/json; # If no content-type then assume JSON

    # API key validation
    location = /_validate_apikey {
        internal;

        if ($http_apikey = "") {
            return 401; # Unauthorized
        }
        if ($api_client_name = "") {
            return 403; # Forbidden
        }

        return 204; # OK (no content)
    }

    # Dummy location used to populate $request_body for JSON validation
    location /_get_request_body {
        return 204;
    }
}

js_import json_validation.js;
js_set $json_validated json_validation.parseRequestBody;

server {
    listen 127.0.0.1:10415;
    return 415; # Unsupported media type
    include api_json_errors.conf;
}

# Canary deployments
map $http_canary $warehouse_inventory_upstream {
    "1"       warehouse_inventory_canary;
    "0"       warehouse_inventory;
    default   warehouse_inventory;
}

# split_clients "${remote_addr}_INVENTORY" $warehouse_inventory_upstream {
#     20.0%              warehouse_inventory_canary;
#     80.0%              warehouse_inventory;
#     *                  "";
# }
